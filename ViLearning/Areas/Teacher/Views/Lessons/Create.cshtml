@model ViLearning.Models.Lesson

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<body>
<center>
        <h1>Create</h1>

        <h4>Lesson</h4>
 </center>
        <hr />
            <div class="row">
                <div class="col-md-́́8 mx-auto ">
            <form asp-action="Create" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="LessonName" class="control-label"></label>
                            <input asp-for="LessonName" class="form-control" />
                            <span asp-validation-for="LessonName" class="text-danger"></span>
                        </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="statusBoolean" /> @Html.DisplayNameFor(model => model.statusBoolean)
                </label>
            </div>
                        <div class="form-group">
                            <label asp-for="NumberOfQuestion" class="control-label"></label>
                            <input asp-for="NumberOfQuestion" class="form-control" />
                            <span asp-validation-for="NumberOfQuestion" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="LessonNo" class="control-label"></label>
                            <input asp-for="LessonNo" class="form-control" />
                            <span asp-validation-for="LessonNo" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Content" class="control-label"></label>
                            <textarea asp-for="Content" class="form-control"></textarea>
                            <span asp-validation-for="Content" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Video" class="control-label"></label>
                            <input type="file" name="Video" asp-for="Video" class="form-control" />
                            <span asp-validation-for="Video" class="text-danger"></span>
                        </div>
                        <div class="form-group">

                            <select asp-for="CourseId" class="form-control" asp-items="ViewBag.CourseId" hidden></select>
                        </div>
                        <center>
                            <div class="form-group">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </center>
                    </form>
                </div>
            </div>
    <center>
        <div>
            <a asp-action="Index">Back to List</a>
        </div>
    </center>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script>
            tinymce.init({
                selector: 'textarea',
                plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
                toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent',
                tinycomments_mode: 'embedded',
                tinycomments_author: 'Author name',
                mergetags_list: [
                    { value: 'First.Name', title: 'First Name' },
                    { value: 'Email', title: 'Email' },
                ],
                ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
            });
        </script>
}
</body>