@model ViLearning.Models.Lesson

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/css/Teacher/Lessons/Edit.css" />

}
<body>
<center>
    <h1>Thông Tin</h1>

    <h4>Bài Học</h4>
</center>

    <hr />
    <div class="row">
        <div class="col-md-́́10 mx-auto form-container">
            <form name="questionForm" asp-action="Edit" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input  asp-for="LessonId" value="@Model.LessonId" type="hidden" class="box"/>
                <div class="form-group">
                    <label asp-for="LessonName" class="control-label ">Tên Bài Học</label>
                    <input asp-for="LessonName" class="form-control" class="box" />
                    <span asp-validation-for="LessonName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LessonNo" class="control-label"></label>
                    <input asp-for="LessonNo" class="form-control" class="box" />
                    <span asp-validation-for="LessonNo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Content" class="control-label">Nội Dung Bài Học</label>
                    <textarea asp-for="Content" class="form-control" ></textarea>
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Video" class="control-label">Video Bài Giảng</label>
                    <br />
                    @if (Model.Video != null)
                    {
                        <video width="320" height="240" controls id="video">
                        </video>
                    }
                   

                    <input type="file" name="Video" asp-for="Video" class="form-control" class="box"/>
                    <span asp-validation-for="Video" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="TotalQuestions" class="control-label ">Số Câu Hỏi</label>
                    <input asp-for="TotalQuestions" name="TotalQuestions" class="form-control" class="box" />
                    <span asp-validation-for="TotalQuestions" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="EasyQuestions" class="control-label ">Số Câu Hỏi Nhận Biết</label>
                    <input asp-for="EasyQuestions" name="EasyQuestions" class="form-control" class="box" />
                    <span asp-validation-for="EasyQuestions" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="MediumQuestions" class="control-label ">Số Câu Hỏi Thông Hiểu</label>
                    <input asp-for="MediumQuestions" name="MediumQuestions" class="form-control" class="box" />
                    <span asp-validation-for="MediumQuestions" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="HardQuestions" class="control-label ">Số Câu Hỏi Vận Dụng</label>
                    <input asp-for="HardQuestions" name="HardQuestions" class="form-control" class="box" />
                    <span asp-validation-for="HardQuestions" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="TestDuration" class="control-label ">Thời Gian Làm Bài</label>
                    <input asp-for="TestDuration" class="form-control" class="box" />
                    <span asp-validation-for="TestDuration" class="text-danger"></span>
                </div>
                <div class="form-group">
  
                    <input asp-for="CourseId" class="form-control" value="@Model.CourseId" hidden></input>
                    <span asp-validation-for="CourseId" class="text-danger"></span>
                </div>
                <center>
                    <div class="form-group">
                        <input type="submit" value="Lưu" class="btn btn-primary" />
                    </div>

                    <div>
                        <a asp-action="Details" asp-controller="Courses" asp-route-id="@Model.CourseId">Quay Lại</a>
                    </div>

                </center>
                
            </form>
        </div>
    </div>

<

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
        });
    </script>
        <script>
            function validateForm() {
                // Get form values
                let totalQuestions = parseInt(document.forms["questionForm"]["TotalQuestions"].value);
                let easyQuestions = parseInt(document.forms["questionForm"]["EasyQuestions"].value);
                let mediumQuestions = parseInt(document.forms["questionForm"]["MediumQuestions"].value);
                let hardQuestions = parseInt(document.forms["questionForm"]["HardQuestions"].value);

                // Check if the sum of easy, medium, and hard questions equals the total number of questions
                if (easyQuestions + mediumQuestions + hardQuestions !== totalQuestions) {
                    alert("Tổng số câu hỏi phải bằng tổng số câu hỏi nhận biết, thông hiểu và vận dụng!");
                    document.forms["questionForm"]["TotalQuestions"].value = "";
                    document.forms["questionForm"]["EasyQuestions"].value = "";
                    document.forms["questionForm"]["MediumQuestions"].value = "";
                    document.forms["questionForm"]["HardQuestions"].value = "";
                    return false;
                }
                return true;
            }
        </script>
}
</body>
<script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        const playlistUrl = "@Model.Video";

        if (playlistUrl && video) {
            if (Hls.isSupported()) {
                const hls = new Hls();
                hls.loadSource(playlistUrl);
                hls.attachMedia(video);
                hls.on(Hls.Events.MANIFEST_PARSED, () => {
                    video.addEventListener('click', () => {
                        video.play();
                    });
                });
            } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
                video.src = playlistUrl;
                video.addEventListener('loadedmetadata', () => {
                    video.addEventListener('click', () => {
                        video.play();
                    });
                });
            }
        }
    });
</script>